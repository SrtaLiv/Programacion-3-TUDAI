Index: src/main/java/practico_especial/Procesador.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package practico_especial;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Procesador {\r\n    private String idProcesador;\r\n    private String codigoProcesador;\r\n    private Boolean estaRefrigerado;\r\n    private Integer anioFuncionamiento;\r\n\r\n    private Integer tiempoEjecucionAcumulado;\r\n\r\n    List<Tarea> tareasAsignadas;\r\n\r\n    public Procesador(String idProcesador, String codigoProcesador, Boolean estaRefrigerado, Integer anioFuncionamiento) {\r\n        this.idProcesador = idProcesador;\r\n        this.codigoProcesador = codigoProcesador;\r\n        this.estaRefrigerado = estaRefrigerado;\r\n        this.anioFuncionamiento = anioFuncionamiento;\r\n\r\n        this.tareasAsignadas = new ArrayList<>();\r\n        this.tiempoEjecucionAcumulado = 0;\r\n    }\r\n\r\n    public void pushTarea(Tarea tarea){\r\n        this.tareasAsignadas.add(tarea);\r\n        this.tiempoEjecucionAcumulado += tarea.getTiempoEjecucion();\r\n    }\r\n\r\n    public void popTarea(Tarea tarea){\r\n        this.tareasAsignadas.remove(tarea);\r\n    }\r\n\r\n    public boolean esRefrigerado(){\r\n        return this.estaRefrigerado;\r\n    }\r\n\r\n    public boolean tieneTareas(){\r\n        return !this.tareasAsignadas.isEmpty();\r\n    }\r\n\r\n    public Integer getTiempoEjecucionAcumulado(){\r\n        return this.tiempoEjecucionAcumulado;\r\n    }\r\n\r\n    public Tarea getUltimaTarea(){\r\n        return this.tareasAsignadas.get(this.tareasAsignadas.size()-1);\r\n    }\r\n\r\n    public String getId(){\r\n        return this.idProcesador;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/practico_especial/Procesador.java b/src/main/java/practico_especial/Procesador.java
--- a/src/main/java/practico_especial/Procesador.java	
+++ b/src/main/java/practico_especial/Procesador.java	
@@ -9,9 +9,12 @@
     private Boolean estaRefrigerado;
     private Integer anioFuncionamiento;
 
+
+    private List<Tarea> tareasAsignadas;
     private Integer tiempoEjecucionAcumulado;
+    private Integer tareasCriticas;
 
-    List<Tarea> tareasAsignadas;
+    private static Integer maxTiempoEjecucion;
 
     public Procesador(String idProcesador, String codigoProcesador, Boolean estaRefrigerado, Integer anioFuncionamiento) {
         this.idProcesador = idProcesador;
@@ -21,11 +24,14 @@
 
         this.tareasAsignadas = new ArrayList<>();
         this.tiempoEjecucionAcumulado = 0;
+        this.tareasCriticas = 0;
     }
 
     public void pushTarea(Tarea tarea){
         this.tareasAsignadas.add(tarea);
         this.tiempoEjecucionAcumulado += tarea.getTiempoEjecucion();
+        if(tarea.esCritica())
+            this.tareasCriticas++;
     }
 
     public void popTarea(Tarea tarea){
@@ -52,4 +58,27 @@
         return this.idProcesador;
     }
 
+    public Integer getCantTareasCriticas(){
+        return this.tareasCriticas;
+    }
+
+    public boolean puedeEjecutar(Tarea t){
+        // si no es refrigerado, verifico que no sobrepase el max tiempo de ejecucion
+        if(!this.esRefrigerado() && t.getTiempoEjecucion() > maxTiempoEjecucion){
+            return false;
+
+        } else if (t.esCritica() && this.tareasCriticas >= 2) {
+            return false;
+        }
+
+        // si es critica, verifico que la ultima tarea asignada no sea critica (lo sacaron del tpe?)
+        /*if(p.tieneTareas()){
+            Tarea ultimaTarea = p.getUltimaTarea();
+            if(ultimaTarea.esCritica() && t.esCritica())
+                return false;
+        }*/
+
+        return true;
+    }
+
 }
Index: src/main/java/practico_especial/Servicios.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package practico_especial;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class Servicios {\r\n\r\n    private List<Tarea> tareas;\r\n    private List<Procesador> procesadores;\r\n\r\n    //private HashMap<String, Procesador> hasmapProcesadores;\r\n    private HashMap<String, Tarea> hashmapTareas;                   // para servicio1\r\n\r\n    private List<Tarea> tareasCriticas;                             // para servicio2\r\n    private List<Tarea> tareasNoCriticas;                           // para servicio2\r\n\r\n    private Integer maxTiempoEjecucion;                             // para cpu no refrigerado\r\n\r\n    public Servicios(String pathProcesadores, String pathTareas) {\r\n\r\n        this.procesadores = new ArrayList<>();\r\n        this.tareas = new ArrayList<>();\r\n\r\n        this.hashmapTareas = new HashMap<>();\r\n        //this.hasmapProcesadores = new HashMap<>();\r\n\r\n        this.tareasCriticas = new ArrayList<>();\r\n        this.tareasNoCriticas = new ArrayList<>();\r\n\r\n        this.readProcessors(pathProcesadores);\r\n        this.readTasks(pathTareas);\r\n\r\n        this.maxTiempoEjecucion = 0;\r\n\r\n    }\r\n\r\n    public void readTasks(String taskPath) {\r\n\r\n        // Obtengo una lista con las lineas del archivo\r\n        // lines.get(0) tiene la primer linea del archivo\r\n        // lines.get(1) tiene la segunda linea del archivo... y así\r\n        ArrayList<String[]> lines = this.readContent(taskPath);\r\n\r\n        for (String[] line: lines) {\r\n            // Cada linea es un arreglo de Strings, donde cada posicion guarda un elemento\r\n            String id = line[0].trim();\r\n            String nombre = line[1].trim();\r\n            Integer tiempo = Integer.parseInt(line[2].trim());\r\n            Boolean critica = Boolean.parseBoolean(line[3].trim());\r\n            Integer prioridad = Integer.parseInt(line[4].trim());\r\n\r\n            Tarea t = new Tarea(id, nombre, tiempo, critica, prioridad);\r\n            this.tareas.add(t);                             // agrego tarea a la lista simple\r\n            hashmapTareas.put(t.getId(), t);                // agergo tarea al hashmap con clave tarea.id\r\n\r\n            if(t.esCritica()){\r\n                tareasCriticas.add(t);                      // agrego a lista de critica o NOcritica\r\n            }else{\r\n                tareasNoCriticas.add(t);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void readProcessors(String processorPath) {\r\n\r\n        // Obtengo una lista con las lineas del archivo\r\n        // lines.get(0) tiene la primer linea del archivo\r\n        // lines.get(1) tiene la segunda linea del archivo... y así\r\n        ArrayList<String[]> lines = this.readContent(processorPath);\r\n\r\n        for (String[] line: lines) {\r\n            // Cada linea es un arreglo de Strings, donde cada posicion guarda un elemento\r\n            String id = line[0].trim();\r\n            String codigo = line[1].trim();\r\n            Boolean refrigerado = Boolean.parseBoolean(line[2].trim());\r\n            Integer anio = Integer.parseInt(line[3].trim());\r\n\r\n            Procesador p = new Procesador(id, codigo, refrigerado, anio);\r\n            this.procesadores.add(p);\r\n            //this.hasmapProcesadores.put(p.getId(), p);\r\n        }\r\n\r\n    }\r\n\r\n    private ArrayList<String[]> readContent(String path) {\r\n        ArrayList<String[]> lines = new ArrayList<String[]>();\r\n\r\n        File file = new File(path);\r\n        FileReader fileReader = null;\r\n        BufferedReader bufferedReader = null;\r\n        try {\r\n            fileReader = new FileReader(file);\r\n            bufferedReader = new BufferedReader(fileReader);\r\n            String line = null;\r\n            while ((line = bufferedReader.readLine()) != null) {\r\n                line = line.trim();\r\n                lines.add(line.split(\";\"));\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            if (bufferedReader != null)\r\n                try {\r\n                    bufferedReader.close();\r\n                } catch (IOException e1) {\r\n                    e1.printStackTrace();\r\n                }\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    {\r\n    /*private List<String> leerArchivo(String path) {\r\n        List<String> lines = new ArrayList<>();                                         // lista vacia\r\n        try (BufferedReader br = new BufferedReader(new FileReader(path))) {            // creo BufferReader con path\r\n            String line;                                                                // temp string\r\n            while ((line = br.readLine()) != null) {                                    // leo linea por linea si no es null\r\n                lines.add(line);                                                        // la agrego a la lista de lineas\r\n            }\r\n        } catch (IOException e) {\r\n            return null;                                                                // return null si hay error\r\n        }\r\n        return lines;                                                                   // return lista de lineas\r\n    }\r\n\r\n    private void cargarTareas(String pathTareas) {\r\n\r\n        List<String> csv = this.leerArchivo(pathTareas);                                // leo el archivo csv\r\n\r\n        for(String line: csv) {                                                         // recorro linea x linea\r\n\r\n            String[] datos = line.split(\";\");                                     // split de las columnas en cada ;\r\n\r\n            String idTarea =            datos[0];\r\n            String nombreTarea =        datos[1];\r\n            double tiempoEjecucion =    Double.parseDouble(datos[2]);\r\n            Boolean esCritica =         Boolean.parseBoolean(datos[3]);\r\n            int nievlPrioridad =        Integer.parseInt(datos[4]);\r\n\r\n            Tarea t = new Tarea(idTarea, nombreTarea, tiempoEjecucion, esCritica, nievlPrioridad);\r\n\r\n            this.tareas.add(t);                             // agrego tarea a la lista simple\r\n            hashmapTareas.put(t.getId(), t);                // agergo tarea al hashmap con clave tarea.id\r\n\r\n            if(t.esCritica()){\r\n                tareasCriticas.add(t);                     // agrego a lista de critica o NOcritica\r\n            }else{\r\n                tareasNoCriticas.add(t);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private void cargarProcesadores(String pathProcesadores) {\r\n\r\n        List<String> csv = this.leerArchivo(pathProcesadores);\r\n\r\n        for(String line: csv) {\r\n\r\n            String[] datos = line.split(\";\");\r\n\r\n            int idProcesador =          Integer.parseInt(datos[0]);\r\n            int codigoProcesador =      Integer.parseInt(datos[1]);\r\n            Boolean estaRefrigerado =   Boolean.parseBoolean(datos[3]);\r\n            int anioFuncionamiento =    Integer.parseInt(datos[4]);\r\n\r\n            this.procesadores.add(new Procesador(idProcesador, codigoProcesador, estaRefrigerado, anioFuncionamiento));\r\n        }\r\n    }*/\r\n    } // old implementation\r\n\r\n    // GET TAREA BY idTarea, COMPLEJIDAD O(1)\r\n    public Tarea servicio1(String ID) {\r\n       return hashmapTareas.get(ID);\r\n    }\r\n\r\n    // GET TAREAS CRITICAS / NO-CRITICAS, COMPLEJIDAD O(1)\r\n    public List<Tarea> servicio2(boolean esCritica) {\r\n        if(esCritica)\r\n            return this.tareasCriticas;\r\n        return this.tareasNoCriticas;\r\n    }\r\n\r\n    // rango min/max prioridad, COMPLEJIDAD O(N)\r\n    public List<Tarea> servicio3(int prioridadInferior, int prioridadSuperior) {\r\n        List<Tarea> rangoTareas = new ArrayList<>();\r\n        for (Tarea t : tareas){\r\n            if (t.getNivelPrioridad() >= prioridadInferior && t.getNivelPrioridad() <= prioridadSuperior){\r\n                rangoTareas.add(t);\r\n            }\r\n        }\r\n        return rangoTareas;\r\n    }\r\n\r\n    public void setMaxTiempoEjecucion(Integer m){\r\n        this.maxTiempoEjecucion = m;\r\n    }\r\n\r\n    public void ejecutarTareas(){\r\n\r\n        System.out.println(\"\\nTiempo ejecucion maximo CPU NO refrigerado: \"+this.maxTiempoEjecucion+\"s\");\r\n        System.out.println(\"===========================================================\\n\");\r\n\r\n        for(Tarea t : this.tareas){                                             // por cada tarea\r\n\r\n            Procesador p = this.getBestCPU(t);                                  // busco el mejor cpu asignable\r\n            p.pushTarea(t);                                                     // asigno la tarea a ese cpu\r\n\r\n            // print tareas\r\n            String crit = t.esCritica()?\"SI\":\"NO\";\r\n            System.out.println(t.getNombre()+\" - (critica: \"+crit+\", tiempo: \"+t.getTiempoEjecucion()+\"s) \\t\\t\\tasignada a CPU '\"+p.getId()+\"'\");\r\n\r\n        }\r\n\r\n        // print procesadores\r\n        System.out.println(\"\\n===========================================================\\n\");\r\n        for(Procesador p : this.procesadores){\r\n            String ref = p.esRefrigerado()?\"SI\":\"NO\";\r\n            System.out.println(\"CPU \"+p.getId()+\" - (refrigerado: \"+ref+\")\\t\\t\\tTiempo total: \"+p.getTiempoEjecucionAcumulado()+\" s\");\r\n        }\r\n\r\n    }\r\n\r\n    public boolean esAsignable(Procesador p, Tarea t){\r\n        // si no es refrigerado, verifico que no sobrepase el max tiempo de ejecucion\r\n        if(!p.esRefrigerado() && t.getTiempoEjecucion() > this.maxTiempoEjecucion){\r\n            return false;\r\n        }\r\n\r\n        // si es critica, verifico que la ultima tarea asignada no sea critica (lo sacaron del tpe?)\r\n        /*if(p.tieneTareas()){\r\n            Tarea ultimaTarea = p.getUltimaTarea();\r\n            if(ultimaTarea.esCritica() && t.esCritica())\r\n                return false;\r\n        }*/\r\n\r\n        return true;\r\n    }\r\n\r\n    // obtengo el proximo mejor cpu:\r\n    // itero sobre los procesadores y busco el que tenga menos tiempo de ejecucion acumulada\r\n    // y que la tarea se pueda asignar a ese cpu\r\n    public Procesador getBestCPU(Tarea t){\r\n        Procesador best = this.procesadores.get(0);\r\n        for(Procesador p : this.procesadores){\r\n            if(p.getTiempoEjecucionAcumulado() < best.getTiempoEjecucionAcumulado())\r\n                if(esAsignable(p, t))\r\n                    best = p;\r\n        }\r\n        return best;\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/practico_especial/Servicios.java b/src/main/java/practico_especial/Servicios.java
--- a/src/main/java/practico_especial/Servicios.java	
+++ b/src/main/java/practico_especial/Servicios.java	
@@ -194,62 +194,20 @@
         return rangoTareas;
     }
 
-    public void setMaxTiempoEjecucion(Integer m){
-        this.maxTiempoEjecucion = m;
-    }
-
-    public void ejecutarTareas(){
-
-        System.out.println("\nTiempo ejecucion maximo CPU NO refrigerado: "+this.maxTiempoEjecucion+"s");
-        System.out.println("===========================================================\n");
-
-        for(Tarea t : this.tareas){                                             // por cada tarea
-
-            Procesador p = this.getBestCPU(t);                                  // busco el mejor cpu asignable
-            p.pushTarea(t);                                                     // asigno la tarea a ese cpu
+    public void backtracking() { //cada procesador con las tareas
 
-            // print tareas
-            String crit = t.esCritica()?"SI":"NO";
-            System.out.println(t.getNombre()+" - (critica: "+crit+", tiempo: "+t.getTiempoEjecucion()+"s) \t\t\tasignada a CPU '"+p.getId()+"'");
 
-        }
+        for(Tarea t : tareas){
 
-        // print procesadores
-        System.out.println("\n===========================================================\n");
-        for(Procesador p : this.procesadores){
-            String ref = p.esRefrigerado()?"SI":"NO";
-            System.out.println("CPU "+p.getId()+" - (refrigerado: "+ref+")\t\t\tTiempo total: "+p.getTiempoEjecucionAcumulado()+" s");
-        }
 
-    }
+            p.asignarTarea(t);
 
-    public boolean esAsignable(Procesador p, Tarea t){
-        // si no es refrigerado, verifico que no sobrepase el max tiempo de ejecucion
-        if(!p.esRefrigerado() && t.getTiempoEjecucion() > this.maxTiempoEjecucion){
-            return false;
-        }
+            backtracking();
 
-        // si es critica, verifico que la ultima tarea asignada no sea critica (lo sacaron del tpe?)
-        /*if(p.tieneTareas()){
-            Tarea ultimaTarea = p.getUltimaTarea();
-            if(ultimaTarea.esCritica() && t.esCritica())
-                return false;
-        }*/
+            p.removerTarea(t);
 
-        return true;
-    }
 
-    // obtengo el proximo mejor cpu:
-    // itero sobre los procesadores y busco el que tenga menos tiempo de ejecucion acumulada
-    // y que la tarea se pueda asignar a ese cpu
-    public Procesador getBestCPU(Tarea t){
-        Procesador best = this.procesadores.get(0);
-        for(Procesador p : this.procesadores){
-            if(p.getTiempoEjecucionAcumulado() < best.getTiempoEjecucionAcumulado())
-                if(esAsignable(p, t))
-                    best = p;
         }
-        return best;
 
     }
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_22\" default=\"true\" project-jdk-name=\"22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="22" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"55d2d7d2-d721-4245-bf05-1ca2f3ddf5d1\" name=\"Changes\" comment=\"SERVICIO DFS Y BFS\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/practico_especial/CSVReader.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/practico_especial/Main.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/practico_especial/datasets/Procesadores.csv\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/practico_especial/datasets/Tareas.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.name\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.name\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/practico4/ej2/ServicioDFS.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/practico4/ej2/ServicioDFS.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/practico4/ej3/GrafoTieneCiclo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/practico4/ej3/GrafoTieneCiclo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/practico_especial/Procesador.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/practico_especial/Procesador.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/practico_especial/Servicios.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/practico_especial/Servicios.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/practico_especial/Tarea.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/practico_especial/Tarea.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/ejyoutube/Palindromo/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/ejyoutube/Palindromo/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/module-info.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/module-info.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/example/programacion3javatudai/ListaVinculada/MySimpleLinkedList.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/example/programacion3javatudai/ListaVinculada/MySimpleLinkedList.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico1/ej1/MySimpleLinkedList.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico1/ej1/MySimpleLinkedList.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico1/ej4/MySimpleLinkedList.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico1/ej4/MySimpleLinkedList.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico1/ej5/MySimpleLinkedList.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico1/ej5/MySimpleLinkedList.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico1/ej6/MySimpleLinkedList.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico1/ej6/MySimpleLinkedList.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico2/ej1/AlgoritmoN.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico2/ej1/AlgoritmoN.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico2/ej2/AlgoritmoRecursivo2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico2/ej2/AlgoritmoRecursivo2.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico2/ej3/NumeroABinario.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico2/ej3/NumeroABinario.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico2/ej5/Algoritmo.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico2/ej5/Algoritmo.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico2/ej7/MergeSort.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico2/ej7/MergeSort.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico2_1/ej1/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico2_1/ej1/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico2_1/ej1/Tree.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico2_1/ej1/Tree.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico4/GrafoDirigidoMatriz.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico4/GrafoDirigidoMatriz.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico4/IteradorArcos.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico4/IteradorVertices.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/practico4/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/practico4/Main.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;SrtaLiv&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"94459376-f075-41ad-b42c-f43aa754053d\" />\r\n        <option name=\"url\" value=\"https://github.com/SrtaLiv/Programacion-3-TUDAI.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/practico2_1/ej1/Tree.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2eE4c656lGBqfZ5xqddlFpjuZ3z\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Algoritmo.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.AlgoritmoN.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.AlgoritmoRecursivo2.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.AlgoritmosOrdenamiento.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.BusquedaRecursiva.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Fibonacci.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.MergeSort.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.NumeroABinario.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Palindromo.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Tree.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.ejyoutube.EliminarDuplicados.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.practico1.ej5.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.practico1.ej6.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.practico4.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.practico_especial.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;branch-santi&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Web/Spring Boot/primero&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"practico_especial\" />\r\n      <recent name=\"practico2_1.ej1\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Liv\\IdeaProjects\\Programacion-3-JAVA-TUDAI\\src\\main\\java\\practico1\" />\r\n      <recent name=\"C:\\Users\\Liv\\IdeaProjects\\Programacion-3-JAVA-TUDAI\\src\\main\\java\\practico1\\ej4\" />\r\n      <recent name=\"C:\\Users\\Liv\\IdeaProjects\\Programacion-3-JAVA-TUDAI\\src\\main\\java\\practico1\\ej5\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Liv\\IdeaProjects\\Programacion-3-JAVA-TUDAI\\src\\main\\java\\practico1\" />\r\n      <recent name=\"C:\\Users\\Liv\\IdeaProjects\\Programacion-3-JAVA-TUDAI\\src\\main\\java\\org\\example\\programacion3javatudai\\ListaVinculada\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"practico4.ej2\" />\r\n      <recent name=\"practico4\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"practico4\" />\r\n      <recent name=\"practico2.ej7\" />\r\n      <recent name=\"practico1.ej6\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.practico_especial.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"practico2_1.ej1.Main\" />\r\n      <module name=\"Programacion-3-JAVA-TUDAI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"practico2_1.ej1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tree\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"UNNAMED_CLASS_CONFIGURATION\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Tree\" />\r\n      <module name=\"Programacion-3-JAVA-TUDAI\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"practico2_1.ej1e.main\" />\r\n      <module name=\"Programacion-3-JAVA-TUDAI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"practico2_1.ej1e.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"practico4.Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"practico4.Main\" />\r\n      <module name=\"Programacion-3-JAVA-TUDAI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"practico4.ej2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"practico_especial.Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"practico_especial.Main\" />\r\n      <module name=\"Programacion-3-JAVA-TUDAI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"practico_especial.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.practico_especial.Main\" />\r\n        <item itemvalue=\"Application.practico4.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.main\" />\r\n        <item itemvalue=\"Application.Tree\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"55d2d7d2-d721-4245-bf05-1ca2f3ddf5d1\" name=\"Changes\" comment=\"\" />\r\n      <created>1711456479214</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1711456479214</updated>\r\n      <workItem from=\"1715921314869\" duration=\"1436000\" />\r\n      <workItem from=\"1715922766726\" duration=\"1000\" />\r\n      <workItem from=\"1716417547411\" duration=\"1404000\" />\r\n      <workItem from=\"1716421859511\" duration=\"9001000\" />\r\n      <workItem from=\"1716438277033\" duration=\"1595000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"git add .\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713879622474</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713879622474</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"tp hash, metodos\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714023357824</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714023357824</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"agregue tp grafos\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714269888428</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714269888428</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"agregue tp grafos\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714269912836</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714269912836</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Grafo Dirigido con Lista de Adyacencia\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715364450381</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715364450381</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Grafo Dirigido con Lista de Adyacencia\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715364479265</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715364479265</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"SERVICIO DFS Y BFS\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715366038327</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715366038327</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"git add .\" />\r\n    <MESSAGE value=\"tp hash, metodos\" />\r\n    <MESSAGE value=\"agregue tp grafos\" />\r\n    <MESSAGE value=\"Grafo Dirigido con Lista de Adyacencia\" />\r\n    <MESSAGE value=\"SERVICIO DFS Y BFS\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"SERVICIO DFS Y BFS\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IndexOutOfBoundsException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,38 +5,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="55d2d7d2-d721-4245-bf05-1ca2f3ddf5d1" name="Changes" comment="SERVICIO DFS Y BFS">
-      <change afterPath="$PROJECT_DIR$/src/main/java/practico_especial/CSVReader.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/practico_especial/Main.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/practico_especial/datasets/Procesadores.csv" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/practico_especial/datasets/Tareas.csv" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/.name" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.name" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_5_2024_15_18__Changes_1.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/practico4/ej2/ServicioDFS.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/practico4/ej2/ServicioDFS.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/practico4/ej3/GrafoTieneCiclo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/practico4/ej3/GrafoTieneCiclo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/practico_especial/Procesador.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/practico_especial/Procesador.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/practico_especial/Servicios.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/practico_especial/Servicios.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/practico_especial/Tarea.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/practico_especial/Tarea.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/ejyoutube/Palindromo/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/ejyoutube/Palindromo/Main.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/module-info.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/module-info.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/example/programacion3javatudai/ListaVinculada/MySimpleLinkedList.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/programacion3javatudai/ListaVinculada/MySimpleLinkedList.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico1/ej1/MySimpleLinkedList.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico1/ej1/MySimpleLinkedList.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico1/ej4/MySimpleLinkedList.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico1/ej4/MySimpleLinkedList.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico1/ej5/MySimpleLinkedList.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico1/ej5/MySimpleLinkedList.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico1/ej6/MySimpleLinkedList.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico1/ej6/MySimpleLinkedList.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico2/ej1/AlgoritmoN.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico2/ej1/AlgoritmoN.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico2/ej2/AlgoritmoRecursivo2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico2/ej2/AlgoritmoRecursivo2.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico2/ej3/NumeroABinario.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico2/ej3/NumeroABinario.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico2/ej5/Algoritmo.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico2/ej5/Algoritmo.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico2/ej7/MergeSort.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico2/ej7/MergeSort.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico2_1/ej1/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico2_1/ej1/Main.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico2_1/ej1/Tree.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico2_1/ej1/Tree.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico4/GrafoDirigidoMatriz.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico4/GrafoDirigidoMatriz.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico4/IteradorArcos.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico4/IteradorVertices.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/practico4/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico4/Main.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/practico_especial/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico_especial/Main.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/practico_especial/Procesador.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico_especial/Procesador.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/practico_especial/Servicios.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/practico_especial/Servicios.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -53,12 +28,20 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory">{
-  &quot;lastFilter&quot;: {
-    &quot;state&quot;: &quot;OPEN&quot;,
-    &quot;assignee&quot;: &quot;SrtaLiv&quot;
+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
+  "history": [
+    {
+      "state": "OPEN",
+      "assignee": "SrtaLiv",
+      "author": "santikzz"
+    }
+  ],
+  "lastFilter": {
+    "state": "OPEN",
+    "assignee": "SrtaLiv",
+    "author": "santikzz"
   }
-}</component>
+}]]></component>
   <component name="GithubPullRequestsUISettings">
     <option name="selectedUrlAndAccountId">
       <UrlAndAccount>
@@ -162,9 +145,9 @@
       </method>
     </configuration>
     <configuration name="Tree" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="UNNAMED_CLASS_CONFIGURATION" value="true" />
       <option name="MAIN_CLASS_NAME" value="Tree" />
       <module name="Programacion-3-JAVA-TUDAI" />
+      <option name="UNNAMED_CLASS_CONFIGURATION" value="true" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
